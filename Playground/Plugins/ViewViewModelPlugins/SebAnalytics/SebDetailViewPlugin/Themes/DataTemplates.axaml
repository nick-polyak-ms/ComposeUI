<ResourceDictionary xmlns="https://github.com/avaloniaui"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
					xmlns:np="https://np.com/visuals"
					xmlns:seb="https://sebastion.com/visuals"
					xmlns:sebSvcUtils="clr-namespace:Sebastion.Core.SvcUtils;assembly=SebViewModelsCommon">
	<ResourceDictionary.MergedDictionaries>
		<ResourceInclude Source="avares://SebViewsCommon/Themes/Geometries.axaml"/>
	</ResourceDictionary.MergedDictionaries>

	<DataTemplate x:Key="HealthyUnhealthyUnavailableSubView">
		<Grid Width="145"
			  RowDefinitions="*,*,*"
			  Background="{StaticResource SubPanelBrush}">
			<Grid ColumnDefinitions="*,60"
				  Margin="0,0,0,2"
				  VerticalAlignment="Center">
				<TextBlock Text="Healthy:"
						   HorizontalAlignment="Right"
						   Margin="5,0"
						   Classes="Bold"/>
				<TextBlock Text="{Binding Path=NumberOkItems}"
						   Grid.Column="1"
						   Margin="5,0"/>
			</Grid>
			<Grid ColumnDefinitions="*,60"
				  Margin="0,2"
				  VerticalAlignment="Center"
				  Grid.Row="1">
				<TextBlock Text="Unhealthy:"
						   HorizontalAlignment="Right"
						   Margin="5,0"
						   Classes="Bold"/>
				<TextBlock Text="{Binding Path=NumberErrorItems}"
						   Grid.Column="1"
						   Margin="5,0"/>
			</Grid>
			<Grid ColumnDefinitions="*,60"
				  Margin="0,2,0,0"
				  VerticalAlignment="Center"
				  Grid.Row="2">
				<TextBlock Text="Unavailable:"
						   HorizontalAlignment="Right"
						   Margin="5,0"
						   Classes="Bold"/>
				<TextBlock Text="{Binding Path=NumberUnavailableItems}"
						   Grid.Column="1"
						   Margin="5,0"/>
			</Grid>
		</Grid>
	</DataTemplate>

	<DataTemplate x:Key="StatusRatioIndicatorDataTemplate">
		<Grid HorizontalAlignment="Left"
			  VerticalAlignment="Top"
			  ColumnDefinitions="Auto, Auto">
			<Grid HorizontalAlignment="Left"
				  VerticalAlignment="Stretch">
				<StackPanel Orientation="Horizontal">
					<TextBlock Classes="Bold"
							   VerticalAlignment="Top"
							   FontSize="14"
							   Text="{Binding Path=EnvKind}"
							   Margin="0,-6,0,6"/>
					<TextBlock Classes="Bold"
							   Text=" !"
							   IsHitTestVisible="True"
							   Background="Transparent"
							   ToolTip.Tip="{Binding Path=Limit, StringFormat='Not all items have been returned, because of the hard limit of \{0:0\}'}"
							   Foreground="Red"
							   IsVisible="{Binding BoundByTheLimit}"
							   VerticalAlignment="Top"
							   FontSize="14"
							   Margin="0,-6,0,6"/>
				</StackPanel>
				<StackPanel Orientation="Horizontal"
							HorizontalAlignment="Left"
							VerticalAlignment="Bottom">
					<ProgressBar Grid.Row="1"
								 Orientation="Horizontal"
								 Maximum="1"
								 Value="{Binding Path=Ratio}"
								 BorderBrush="#FF45474F"
								 Background="#FF45474F"
								 Foreground="#FF10DB55"
								 Width="200"
								 Height="10"
								 Margin="0,0,10,0"/>
					<TextBlock Classes="Bold"
							   Text="{Binding Path=NumberAppInfos}"
							   FontSize="16"
							   Width="40"
							   Margin="0,0,10,0"/>
				</StackPanel>
			</Grid>
			<ContentPresenter x:Name="StatusNumbersPanel"
							  Grid.Column="1"
							  Content="{Binding}"
							  Margin="0"
							  ContentTemplate="{StaticResource HealthyUnhealthyUnavailableSubView}"/>
		</Grid>
	</DataTemplate>


	<DataTemplate x:Key="HealthyUnhealthyUnavailableView">
		<Grid RowDefinitions="Auto, Auto">
			<TextBlock Text="{Binding EnvKind}"
					   Classes="HeadingOne"/>
			<ContentPresenter Content="{Binding}"
							  ContentTemplate="{StaticResource HealthyUnhealthyUnavailableSubView}"/>
		</Grid>
	</DataTemplate>


	<DataTemplate x:Key="BasicInfoView">
		<Grid x:Name="BasicInfo">
			<Grid DataContext="{Binding BasicData}"
				  ColumnDefinitions="Auto,Auto,Auto">
				<StackPanel Margin="0,0,100,0">
					<np:LabeledControl Text="Name:"
									   Classes="NameValue"
									   TextWidth="49">
						<ControlTemplate>
							<TextBlock Text="{Binding Name}"/>
						</ControlTemplate>
					</np:LabeledControl>
					<np:LabeledControl Text="Status:"
									   Classes="NameValue"
									   TextWidth="49">
						<ControlTemplate>
							<TextBlock Text="{Binding DataContext.Status, ElementName=BasicInfo}"/>
						</ControlTemplate>
					</np:LabeledControl>
					<np:LabeledControl Text="Env Type:"
									   Classes="NameValue"
									   TextWidth="49">
						<ControlTemplate>
							<TextBlock Text="{Binding DataContext.EnvKind, ElementName=BasicInfo}"/>
						</ControlTemplate>
					</np:LabeledControl>
					<np:LabeledControl Text="Env:"
									   Classes="NameValue"
									   TextWidth="49">
						<ControlTemplate>
							<TextBlock Text="{Binding DeploymentEnv}"/>
						</ControlTemplate>
					</np:LabeledControl>
				</StackPanel>
				<StackPanel Margin="0,0,100,0"
							Grid.Column="1"
							VerticalAlignment="Top">
					<np:LabeledControl Text="Castle Version:"
									   Classes="NameValue"
									   TextWidth="77">
						<ControlTemplate>
							<TextBlock Text="{Binding CastleVersion}"/>
						</ControlTemplate>
					</np:LabeledControl>
					<np:LabeledControl Text="Infra Version:"
									   Classes="NameValue"
									   TextWidth="77">
						<ControlTemplate>
							<TextBlock Text="{Binding InfraVersion}"/>
						</ControlTemplate>
					</np:LabeledControl>
					<np:LabeledControl Text="Eon ID:"
									   Classes="NameValue"
									   TextWidth="77">
						<ControlTemplate>
							<TextBlock Text="{Binding EonId}"/>
						</ControlTemplate>
					</np:LabeledControl>
					<np:LabeledControl Text="Pro ID:"
									   Classes="NameValue"
									   TextWidth="77">
						<ControlTemplate>
							<TextBlock Text="{Binding Proid}"/>
						</ControlTemplate>
					</np:LabeledControl>
				</StackPanel>
				<StackPanel Grid.Column="2">
					<np:LabeledControl Text="App Start Time:"
									   Classes="NameValue"
									   TextWidth="81">
						<ControlTemplate>
							<TextBlock Text="{Binding StartTime}"/>
						</ControlTemplate>
					</np:LabeledControl>
					<np:LabeledControl Text="Last Updated:"
									   Classes="NameValue"
									   TextWidth="81">
						<ControlTemplate>
							<TextBlock Text="{Binding DataContext.UpdateTime, ElementName=BasicInfo}"/>
						</ControlTemplate>
					</np:LabeledControl>
					<np:LabeledControl Text="Host:"
									   Classes="NameValue"
									   TextWidth="81">
						<ControlTemplate>
							<TextBlock Text="{Binding Host}"/>
						</ControlTemplate>
					</np:LabeledControl>
				</StackPanel>
			</Grid>
		</Grid>
	</DataTemplate>

	<DataTemplate x:Key="DetailedErrorView">
		<Grid RowDefinitions="Auto, *">
			<TextBlock Text="Errors"
					   FontSize="16"
					   Classes="Bold"
					   Margin="0,0,0,3"/>
			<DataGrid Items="{Binding ErrorDataList}"
					  seb:DataGridHelper.CopyMenuItemString="Copy Selected Error Detail Rows to Clipboard"
					  seb:SebastionAttachedProps.RowClasses="AddRowsCopyMenu"
					  Grid.Row="1">
				<DataGrid.Styles>
					<Style Selector="DataGridRow">
						<!-- for some reason using attached properties as a binding source
						 defined within a visual plugin on
						 Row insertion due to the View Model collection change, results in an exception 
						 So I am adding these Row classes manually -->
						<Setter Property="np:ClassesBehavior.InsertClasses"
								Value="FireDataGridRowDoubleTapped RowStatus AddRowsCopyMenu"/>
					</Style>
				</DataGrid.Styles>
				<DataGrid.Columns>
					<DataGridTextColumn Header="Last Update"
										Width="200"
										Binding="{Binding LastUpdate}" />
					<DataGridTextColumn Header="Event ID"
										Width="200"
										Binding="{Binding EventId}" />
					<DataGridTextColumn Header="Unique ID"
										Binding="{Binding UniqueId}"
										Width="200" />
					<DataGridTextColumn Header="Count"
										Binding="{Binding Count}"
										Width="150" />
					<DataGridTextColumn Header="Message"
										Width="350"
										Binding="{Binding Message}" />
				</DataGrid.Columns>
			</DataGrid>
		</Grid>
	</DataTemplate>

	<DataTemplate x:Key="DetailedHealthCheckView">
		<Grid x:Name="HealthPanel"
			  RowDefinitions="Auto, *">
			<TextBlock Text="Health Check"
					   FontSize="16"
					   Classes="Bold"
					   Margin="0,0,0,3"/>
			<DataGrid Items="{Binding HealthTests}"
					  seb:DataGridHelper.CopyMenuItemString="Copy Selected Health Detail Rows to Clipboard"
					  seb:SebastionAttachedProps.RowClasses="AddRowsCopyMenu"
					  Grid.Row="1">
				<DataGrid.Styles>
					<Style Selector="DataGridRow">
						<!-- for some reason using attached properties as a binding source
						 defined within a visual plugin on
						 Row insertion due to the View Model collection change, results in an exception 
						 So I am adding these Row classes manually -->
						<Setter Property="np:ClassesBehavior.InsertClasses"
								Value="FireDataGridRowDoubleTapped RowStatus AddRowsCopyMenu"/>
					</Style>
				</DataGrid.Styles>
				<DataGrid.Columns>
					<DataGridTextColumn Header="Status"
                                        MinWidth="100"
                                        MaxWidth="150"
                                        Binding="{Binding #HealthPanel.DataContext.Status}" />
					<DataGridTextColumn Header="Test Name"
                                        Width="200"
                                        Binding="{Binding TestName}" />
					<DataGridTextColumn Header="Test Type"
                                        Binding="{Binding TestType}"
                                        Width="200" />
					<DataGridTextColumn Header="Test Description"
                                        Binding="{Binding TestDesc}"
                                        MinWidth="200" />
					<DataGridTextColumn Header="Last Run"
                                        MinWidth="150"
                                        Binding="{Binding LastRunTime}" />
					<DataGridTextColumn Header="Is Running"
                                        MinWidth="150"
                                        Binding="{Binding IsRunning}" />
				</DataGrid.Columns>
			</DataGrid>
		</Grid>
	</DataTemplate>

	<DataTemplate x:Key="DetailedAppView">
		<Grid x:Name="RootGrid"
			  RowDefinitions="Auto, Auto, *, *"
			  DataContext="{Binding Path=CurrentlySelectedAppInfo}"
			  Margin="10">
			<Grid x:Name="TopPanel">
				<TextBlock Text="{Binding Fsn}"
						   Classes="HeadingOne"/>
				<!--
				<Button Content="Visit Page"
						HorizontalAlignment="Right"
						FontSize="12"
						FontWeight="Bold"
						np:CallAction.TheEvent="{x:Static Button.ClickEvent}"
						np:CallAction.MethodName="VisitPage"/>
						-->
			</Grid>
			<ContentPresenter Grid.Row="1"
							  Content="{Binding #RootGrid.DataContext}"
							  ContentTemplate="{StaticResource BasicInfoView}"
							  Margin="0,10,0,5"/>
			<ContentPresenter Grid.Row="2"
							  Content="{Binding #RootGrid.DataContext.ErrorData}"
							  ContentTemplate="{StaticResource DetailedErrorView}"
							  Margin="0,5"/>
			<ContentPresenter Grid.Row="3"
							  Content="{Binding #RootGrid.DataContext.HealthData}"
							  ContentTemplate="{StaticResource DetailedHealthCheckView}"
							  Margin="0,5,0,10"/>
		</Grid>
	</DataTemplate>

</ResourceDictionary>
